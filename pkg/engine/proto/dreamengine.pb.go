// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: proto/dreamengine.proto

package dreamdatastream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Instance->API
type HandshakeManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//The client issues a handshake to the server on connection which starts a session
	ClientSoftware string `protobuf:"bytes,1,opt,name=clientSoftware,proto3" json:"clientSoftware,omitempty"`
}

func (x *HandshakeManifest) Reset() {
	*x = HandshakeManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeManifest) ProtoMessage() {}

func (x *HandshakeManifest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeManifest.ProtoReflect.Descriptor instead.
func (*HandshakeManifest) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{0}
}

func (x *HandshakeManifest) GetClientSoftware() string {
	if x != nil {
		return x.ClientSoftware
	}
	return ""
}

//API<-Instance
type HandshakeReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//ID this instance was added to the ComputeIndex with
	InstanceID string `protobuf:"bytes,1,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	ClientID   string `protobuf:"bytes,2,opt,name=clientID,proto3" json:"clientID,omitempty"` //This identifies this session
	Ok         bool   `protobuf:"varint,3,opt,name=ok,proto3" json:"ok,omitempty"`            //Server condition
	Ready      bool   `protobuf:"varint,4,opt,name=ready,proto3" json:"ready,omitempty"`      //Server accepting work
	Error      string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`       //if !ok, here is error
}

func (x *HandshakeReceipt) Reset() {
	*x = HandshakeReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeReceipt) ProtoMessage() {}

func (x *HandshakeReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeReceipt.ProtoReflect.Descriptor instead.
func (*HandshakeReceipt) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{1}
}

func (x *HandshakeReceipt) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *HandshakeReceipt) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *HandshakeReceipt) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *HandshakeReceipt) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *HandshakeReceipt) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type HealthCheckManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheckManifest) Reset() {
	*x = HealthCheckManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckManifest) ProtoMessage() {}

func (x *HealthCheckManifest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckManifest.ProtoReflect.Descriptor instead.
func (*HealthCheckManifest) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{2}
}

// ### HealthCheck
type HealthCheckReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool           `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`       //Top level declaration, enough to continue connection, but not work
	Ready  bool           `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"` //Declaration the top level is ready for work
	Errors []*ServerError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *HealthCheckReceipt) Reset() {
	*x = HealthCheckReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckReceipt) ProtoMessage() {}

func (x *HealthCheckReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckReceipt.ProtoReflect.Descriptor instead.
func (*HealthCheckReceipt) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckReceipt) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *HealthCheckReceipt) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *HealthCheckReceipt) GetErrors() []*ServerError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ServerError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServerError) Reset() {
	*x = ServerError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerError) ProtoMessage() {}

func (x *ServerError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerError.ProtoReflect.Descriptor instead.
func (*ServerError) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{4}
}

func (x *ServerError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TaskManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*TaskManifest_Load
	//	*TaskManifest_Exec
	Data isTaskManifest_Data `protobuf_oneof:"Data"`
}

func (x *TaskManifest) Reset() {
	*x = TaskManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskManifest) ProtoMessage() {}

func (x *TaskManifest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskManifest.ProtoReflect.Descriptor instead.
func (*TaskManifest) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{5}
}

func (m *TaskManifest) GetData() isTaskManifest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *TaskManifest) GetLoad() *LoadModelManifest {
	if x, ok := x.GetData().(*TaskManifest_Load); ok {
		return x.Load
	}
	return nil
}

func (x *TaskManifest) GetExec() *ExecuteDataManifest {
	if x, ok := x.GetData().(*TaskManifest_Exec); ok {
		return x.Exec
	}
	return nil
}

type isTaskManifest_Data interface {
	isTaskManifest_Data()
}

type TaskManifest_Load struct {
	Load *LoadModelManifest `protobuf:"bytes,2,opt,name=load,proto3,oneof"`
}

type TaskManifest_Exec struct {
	Exec *ExecuteDataManifest `protobuf:"bytes,3,opt,name=exec,proto3,oneof"`
}

func (*TaskManifest_Load) isTaskManifest_Data() {}

func (*TaskManifest_Exec) isTaskManifest_Data() {}

type TaskReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*TaskReceipt_Load
	//	*TaskReceipt_Exec
	Data isTaskReceipt_Data `protobuf_oneof:"Data"`
}

func (x *TaskReceipt) Reset() {
	*x = TaskReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReceipt) ProtoMessage() {}

func (x *TaskReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReceipt.ProtoReflect.Descriptor instead.
func (*TaskReceipt) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{6}
}

func (m *TaskReceipt) GetData() isTaskReceipt_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *TaskReceipt) GetLoad() *LoadModelReceipt {
	if x, ok := x.GetData().(*TaskReceipt_Load); ok {
		return x.Load
	}
	return nil
}

func (x *TaskReceipt) GetExec() *ExecuteDataReceipt {
	if x, ok := x.GetData().(*TaskReceipt_Exec); ok {
		return x.Exec
	}
	return nil
}

type isTaskReceipt_Data interface {
	isTaskReceipt_Data()
}

type TaskReceipt_Load struct {
	Load *LoadModelReceipt `protobuf:"bytes,2,opt,name=load,proto3,oneof"`
}

type TaskReceipt_Exec struct {
	Exec *ExecuteDataReceipt `protobuf:"bytes,3,opt,name=exec,proto3,oneof"`
}

func (*TaskReceipt_Load) isTaskReceipt_Data() {}

func (*TaskReceipt_Exec) isTaskReceipt_Data() {}

type LoadModelManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinaryModelDefinition []byte `protobuf:"bytes,2,opt,name=BinaryModelDefinition,proto3" json:"BinaryModelDefinition,omitempty"`
}

func (x *LoadModelManifest) Reset() {
	*x = LoadModelManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadModelManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadModelManifest) ProtoMessage() {}

func (x *LoadModelManifest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadModelManifest.ProtoReflect.Descriptor instead.
func (*LoadModelManifest) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{7}
}

func (x *LoadModelManifest) GetBinaryModelDefinition() []byte {
	if x != nil {
		return x.BinaryModelDefinition
	}
	return nil
}

type LoadModelReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelID string `protobuf:"bytes,2,opt,name=ModelID,proto3" json:"ModelID,omitempty"` //The modelID required to make task requests
	Ok      bool   `protobuf:"varint,3,opt,name=ok,proto3" json:"ok,omitempty"`
	Error   string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LoadModelReceipt) Reset() {
	*x = LoadModelReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadModelReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadModelReceipt) ProtoMessage() {}

func (x *LoadModelReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadModelReceipt.ProtoReflect.Descriptor instead.
func (*LoadModelReceipt) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{8}
}

func (x *LoadModelReceipt) GetModelID() string {
	if x != nil {
		return x.ModelID
	}
	return ""
}

func (x *LoadModelReceipt) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *LoadModelReceipt) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ExecuteDataManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelID      string `protobuf:"bytes,2,opt,name=ModelID,proto3" json:"ModelID,omitempty"`
	InputVector  []byte `protobuf:"bytes,3,opt,name=inputVector,proto3" json:"inputVector,omitempty"`
	HighPriority bool   `protobuf:"varint,4,opt,name=highPriority,proto3" json:"highPriority,omitempty"`
}

func (x *ExecuteDataManifest) Reset() {
	*x = ExecuteDataManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteDataManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteDataManifest) ProtoMessage() {}

func (x *ExecuteDataManifest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteDataManifest.ProtoReflect.Descriptor instead.
func (*ExecuteDataManifest) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{9}
}

func (x *ExecuteDataManifest) GetModelID() string {
	if x != nil {
		return x.ModelID
	}
	return ""
}

func (x *ExecuteDataManifest) GetInputVector() []byte {
	if x != nil {
		return x.InputVector
	}
	return nil
}

func (x *ExecuteDataManifest) GetHighPriority() bool {
	if x != nil {
		return x.HighPriority
	}
	return false
}

type ExecuteDataReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelID      string `protobuf:"bytes,2,opt,name=ModelID,proto3" json:"ModelID,omitempty"`
	OutputVector []byte `protobuf:"bytes,3,opt,name=outputVector,proto3" json:"outputVector,omitempty"`
	Ok           bool   `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"`
	Error        string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ExecuteDataReceipt) Reset() {
	*x = ExecuteDataReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteDataReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteDataReceipt) ProtoMessage() {}

func (x *ExecuteDataReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteDataReceipt.ProtoReflect.Descriptor instead.
func (*ExecuteDataReceipt) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteDataReceipt) GetModelID() string {
	if x != nil {
		return x.ModelID
	}
	return ""
}

func (x *ExecuteDataReceipt) GetOutputVector() []byte {
	if x != nil {
		return x.OutputVector
	}
	return nil
}

func (x *ExecuteDataReceipt) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ExecuteDataReceipt) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

//Top level message
//
//API -> Instance Logic
type ServerToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgID string `protobuf:"bytes,1,opt,name=msgID,proto3" json:"msgID,omitempty"` //
	Reply bool   `protobuf:"varint,2,opt,name=reply,proto3" json:"reply,omitempty"`
	// Types that are assignable to Data:
	//	*ServerToClient_Handshake
	//	*ServerToClient_Healthcheck
	//	*ServerToClient_Task
	//	*ServerToClient_Error
	Data isServerToClient_Data `protobuf_oneof:"data"`
}

func (x *ServerToClient) Reset() {
	*x = ServerToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToClient) ProtoMessage() {}

func (x *ServerToClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToClient.ProtoReflect.Descriptor instead.
func (*ServerToClient) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{11}
}

func (x *ServerToClient) GetMsgID() string {
	if x != nil {
		return x.MsgID
	}
	return ""
}

func (x *ServerToClient) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

func (m *ServerToClient) GetData() isServerToClient_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ServerToClient) GetHandshake() *HandshakeReceipt {
	if x, ok := x.GetData().(*ServerToClient_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (x *ServerToClient) GetHealthcheck() *HealthCheckReceipt {
	if x, ok := x.GetData().(*ServerToClient_Healthcheck); ok {
		return x.Healthcheck
	}
	return nil
}

func (x *ServerToClient) GetTask() *TaskReceipt {
	if x, ok := x.GetData().(*ServerToClient_Task); ok {
		return x.Task
	}
	return nil
}

func (x *ServerToClient) GetError() string {
	if x, ok := x.GetData().(*ServerToClient_Error); ok {
		return x.Error
	}
	return ""
}

type isServerToClient_Data interface {
	isServerToClient_Data()
}

type ServerToClient_Handshake struct {
	//Ops
	Handshake *HandshakeReceipt `protobuf:"bytes,3,opt,name=handshake,proto3,oneof"`
}

type ServerToClient_Healthcheck struct {
	Healthcheck *HealthCheckReceipt `protobuf:"bytes,4,opt,name=healthcheck,proto3,oneof"` // <>
}

type ServerToClient_Task struct {
	Task *TaskReceipt `protobuf:"bytes,5,opt,name=task,proto3,oneof"`
}

type ServerToClient_Error struct {
	//Misc
	Error string `protobuf:"bytes,6,opt,name=error,proto3,oneof"` //Tasks
}

func (*ServerToClient_Handshake) isServerToClient_Data() {}

func (*ServerToClient_Healthcheck) isServerToClient_Data() {}

func (*ServerToClient_Task) isServerToClient_Data() {}

func (*ServerToClient_Error) isServerToClient_Data() {}

//
//Instance -> API Logic
type ClientToServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgID string `protobuf:"bytes,1,opt,name=msgID,proto3" json:"msgID,omitempty"`  //For keeping track of chain msgs on the network
	Reply bool   `protobuf:"varint,2,opt,name=reply,proto3" json:"reply,omitempty"` //Tells the receiver that it needs to consider this a chain message
	// Types that are assignable to Data:
	//	*ClientToServer_Handshake
	//	*ClientToServer_Healthcheck
	//	*ClientToServer_Task
	//	*ClientToServer_Error
	Data isClientToServer_Data `protobuf_oneof:"data"`
}

func (x *ClientToServer) Reset() {
	*x = ClientToServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dreamengine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientToServer) ProtoMessage() {}

func (x *ClientToServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dreamengine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientToServer.ProtoReflect.Descriptor instead.
func (*ClientToServer) Descriptor() ([]byte, []int) {
	return file_proto_dreamengine_proto_rawDescGZIP(), []int{12}
}

func (x *ClientToServer) GetMsgID() string {
	if x != nil {
		return x.MsgID
	}
	return ""
}

func (x *ClientToServer) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

func (m *ClientToServer) GetData() isClientToServer_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ClientToServer) GetHandshake() *HandshakeManifest {
	if x, ok := x.GetData().(*ClientToServer_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (x *ClientToServer) GetHealthcheck() *HealthCheckManifest {
	if x, ok := x.GetData().(*ClientToServer_Healthcheck); ok {
		return x.Healthcheck
	}
	return nil
}

func (x *ClientToServer) GetTask() *TaskManifest {
	if x, ok := x.GetData().(*ClientToServer_Task); ok {
		return x.Task
	}
	return nil
}

func (x *ClientToServer) GetError() string {
	if x, ok := x.GetData().(*ClientToServer_Error); ok {
		return x.Error
	}
	return ""
}

type isClientToServer_Data interface {
	isClientToServer_Data()
}

type ClientToServer_Handshake struct {
	//Ops
	Handshake *HandshakeManifest `protobuf:"bytes,3,opt,name=handshake,proto3,oneof"`
}

type ClientToServer_Healthcheck struct {
	Healthcheck *HealthCheckManifest `protobuf:"bytes,4,opt,name=healthcheck,proto3,oneof"` // <>
}

type ClientToServer_Task struct {
	Task *TaskManifest `protobuf:"bytes,5,opt,name=task,proto3,oneof"`
}

type ClientToServer_Error struct {
	//Misc
	Error string `protobuf:"bytes,6,opt,name=error,proto3,oneof"` //Tasks
}

func (*ClientToServer_Handshake) isClientToServer_Data() {}

func (*ClientToServer_Healthcheck) isClientToServer_Data() {}

func (*ClientToServer_Task) isClientToServer_Data() {}

func (*ClientToServer_Error) isClientToServer_Data() {}

var File_proto_dreamengine_proto protoreflect.FileDescriptor

var file_proto_dreamengine_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x3b, 0x0a, 0x11, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x12, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x23, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x0a,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x65, 0x78,
	0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a,
	0x11, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x15, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x75, 0x0a, 0x13,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0x78, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9c, 0x02,
	0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12,
	0x47, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x02, 0x0a,
	0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x09, 0x68,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12,
	0x48, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x61,
	0x0a, 0x0f, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x64, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f, 0x2e, 0x64, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x61, 0x66, 0x73, 0x6b, 0x65, 0x6c, 0x74, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x64, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dreamengine_proto_rawDescOnce sync.Once
	file_proto_dreamengine_proto_rawDescData = file_proto_dreamengine_proto_rawDesc
)

func file_proto_dreamengine_proto_rawDescGZIP() []byte {
	file_proto_dreamengine_proto_rawDescOnce.Do(func() {
		file_proto_dreamengine_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dreamengine_proto_rawDescData)
	})
	return file_proto_dreamengine_proto_rawDescData
}

var file_proto_dreamengine_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_dreamengine_proto_goTypes = []interface{}{
	(*HandshakeManifest)(nil),   // 0: dreamdatastream.HandshakeManifest
	(*HandshakeReceipt)(nil),    // 1: dreamdatastream.HandshakeReceipt
	(*HealthCheckManifest)(nil), // 2: dreamdatastream.HealthCheckManifest
	(*HealthCheckReceipt)(nil),  // 3: dreamdatastream.HealthCheckReceipt
	(*ServerError)(nil),         // 4: dreamdatastream.ServerError
	(*TaskManifest)(nil),        // 5: dreamdatastream.TaskManifest
	(*TaskReceipt)(nil),         // 6: dreamdatastream.TaskReceipt
	(*LoadModelManifest)(nil),   // 7: dreamdatastream.LoadModelManifest
	(*LoadModelReceipt)(nil),    // 8: dreamdatastream.LoadModelReceipt
	(*ExecuteDataManifest)(nil), // 9: dreamdatastream.ExecuteDataManifest
	(*ExecuteDataReceipt)(nil),  // 10: dreamdatastream.ExecuteDataReceipt
	(*ServerToClient)(nil),      // 11: dreamdatastream.ServerToClient
	(*ClientToServer)(nil),      // 12: dreamdatastream.ClientToServer
}
var file_proto_dreamengine_proto_depIdxs = []int32{
	4,  // 0: dreamdatastream.HealthCheckReceipt.errors:type_name -> dreamdatastream.ServerError
	7,  // 1: dreamdatastream.TaskManifest.load:type_name -> dreamdatastream.LoadModelManifest
	9,  // 2: dreamdatastream.TaskManifest.exec:type_name -> dreamdatastream.ExecuteDataManifest
	8,  // 3: dreamdatastream.TaskReceipt.load:type_name -> dreamdatastream.LoadModelReceipt
	10, // 4: dreamdatastream.TaskReceipt.exec:type_name -> dreamdatastream.ExecuteDataReceipt
	1,  // 5: dreamdatastream.ServerToClient.handshake:type_name -> dreamdatastream.HandshakeReceipt
	3,  // 6: dreamdatastream.ServerToClient.healthcheck:type_name -> dreamdatastream.HealthCheckReceipt
	6,  // 7: dreamdatastream.ServerToClient.task:type_name -> dreamdatastream.TaskReceipt
	0,  // 8: dreamdatastream.ClientToServer.handshake:type_name -> dreamdatastream.HandshakeManifest
	2,  // 9: dreamdatastream.ClientToServer.healthcheck:type_name -> dreamdatastream.HealthCheckManifest
	5,  // 10: dreamdatastream.ClientToServer.task:type_name -> dreamdatastream.TaskManifest
	12, // 11: dreamdatastream.dreamdatastream.data:input_type -> dreamdatastream.ClientToServer
	11, // 12: dreamdatastream.dreamdatastream.data:output_type -> dreamdatastream.ServerToClient
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_dreamengine_proto_init() }
func file_proto_dreamengine_proto_init() {
	if File_proto_dreamengine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dreamengine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadModelManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadModelReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteDataManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteDataReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dreamengine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientToServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_dreamengine_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*TaskManifest_Load)(nil),
		(*TaskManifest_Exec)(nil),
	}
	file_proto_dreamengine_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*TaskReceipt_Load)(nil),
		(*TaskReceipt_Exec)(nil),
	}
	file_proto_dreamengine_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ServerToClient_Handshake)(nil),
		(*ServerToClient_Healthcheck)(nil),
		(*ServerToClient_Task)(nil),
		(*ServerToClient_Error)(nil),
	}
	file_proto_dreamengine_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ClientToServer_Handshake)(nil),
		(*ClientToServer_Healthcheck)(nil),
		(*ClientToServer_Task)(nil),
		(*ClientToServer_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dreamengine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dreamengine_proto_goTypes,
		DependencyIndexes: file_proto_dreamengine_proto_depIdxs,
		MessageInfos:      file_proto_dreamengine_proto_msgTypes,
	}.Build()
	File_proto_dreamengine_proto = out.File
	file_proto_dreamengine_proto_rawDesc = nil
	file_proto_dreamengine_proto_goTypes = nil
	file_proto_dreamengine_proto_depIdxs = nil
}
